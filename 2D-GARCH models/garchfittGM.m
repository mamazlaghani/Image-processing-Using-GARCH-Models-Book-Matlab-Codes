function [coefficients,hh,e] = garchfittGM(spec,y,pp,X);
R=spec(1);
M=spec(2);
P=spec(3);
Q=spec(4);
%[AR , MA , C , unconditionalVariance]  =  arma0(y , R , M);
 %C       =  0; 
 %AR      =  zeros(R,1);
 %MA      =  zeros(M,1); 
 %regress =  zeros(size(X,2),1);
 %unconditionalVariance =2.231986820697785e-006;
%[K , GARCH , ARCH] = garch0(P , Q , unconditionalVariance);
%
%
%
%
%
%
%
%
%
%
%
%
%
C=[];
regress  =  [];
AR=[];
MA=[];
GARCH=[];
ARCH=[];
K=[];
unconditionalVariance  =  [];          % Make sure it exists.

if isempty(X)

   if isempty(C) | (isempty(AR) & (R > 0)) | (isempty(MA) & (M > 0))
%
%     General ARMA conditional mean with no regression component.
%
      [AR , MA , C , unconditionalVariance]  =  arma0(y , R , M);
 

      Flag1  =  logical(0);   % Indicate an INCOMPLETE mean specification.

   end

else

   if M == 0        % Check for MA terms.

      if isempty(C) | (isempty(AR) & (R > 0)) | isempty(regress)
%
%        General ARX conditional mean model with no MA terms. Initial
%        estimates can be generated by a simple OLS regression.
%
         yLag               =  lagmatrix(y , [1:R]);
         yLag(isnan(yLag))  =  mean(y);

         [QQ , RR]  =  qr([ones(size(X,1),1)  yLag  X] , 0);
         b          =  RR \ (QQ'*y);
         residuals  =  y - [ones(size(X,1),1)  yLag  X]*b;

         C       =  b(1);
         AR      =  b(2:R+1);
         MA      =  [];
         regress =  b(R+2:end);

         unconditionalVariance  =  var(residuals,1);
%
%        Ensure stationarity of AR process.
%
         if any(abs(roots([1 ; -AR(:)])) >= 1)
            AR(:)  =  0;
         end

         Flag1  =  logical(0);            % Indicate an INCOMPLETE mean specification.

      end

   else

      if isempty(C) | (isempty(AR) & (R > 0)) | isempty(MA) | isempty(regress)
%
%        General ARMAX conditional mean model. 
%
         C       =  0; 
         AR      =  zeros(R,1);
         MA      =  zeros(M,1); 
         regress =  zeros(size(X,2),1);

         unconditionalVariance  =  1e-4;  % Default assumption for daily returns.

         Flag1  =  logical(0);            % Indicate an INCOMPLETE mean specification.

      end

   end

end

%
% Create initial conditional variance parameter estimates if necessary.
% As for the conditional mean above, this is an 'all or nothing' approach
% for specification of the conditional variance.
%

Flag2  =  logical(1);           % Initialize flag to indicate a complete variance specification.

if isempty(K) | (isempty(GARCH) & (P > 0)) | (isempty(ARCH) & (Q > 0))
     
   [K , GARCH , ARCH] = garch0(P , Q , unconditionalVariance);
   
   Flag2  =  logical(0);        % Indicate an INCOMPLETE variance specification.

end
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%%
%

%b=0.99999800000000;
%A  =  [zeros(1,1+R+M+size(X,2)+1)  ones(1,P)  ones(1,Q)];

%Aeq  =  [];
A=[];
b=[];
beq  =  1;
infinity     =  inf;
hundred      =  100;
for i=1:pp
    ser(:,i)=[1e-10 ; zeros(P+Q,1)];
end
serr=reshape(ser,(pp*(P+Q+1)),1);
lowerBounds  =  [-hundred(ones(1+R+M,1)) ; -infinity(ones(size(X,2),1)) ; serr ; zeros(pp,1)];
tedad=length(lowerBounds);
upperBounds  =  [infinity*ones(tedad-pp,1); ones(pp,1) ];
Aeq  =  [zeros(1,tedad-pp)  ones(1,pp)];
%GARCH;
%ARCH;
%regress;
%AR;
%MA;
%C;
%K;
initial=zeros(P+Q+1,pp);
for i=1:pp
    initial(:,i)=[K ; GARCH(:) ; ARCH(:)];
end
initialr=reshape(initial,pp*(P+Q+1),1);
mn=1/pp;
ppp=ones(pp,1)*mn;
x0  =  [C ; AR(:) ; MA(:) ; regress(:) ; initialr; ppp];
coefficients  =  fmincon('garchlfnGM'  , x0 , A  , b, Aeq , beq ,lowerBounds ,upperBounds ,@confun221,[] ,y , pp , R , M , P , Q , X);
%[coefficients , LLF, exitFlag , output , lambda] =  fmincon('garchlfnGM'  , x0 , A  , b, Aeq , beq ,lowerBounds ,upperBounds ,@confun22,[] ,y , pp , R , M , P , Q , X);
%[coefficients , LLF, exitFlag , output , lambda] =  fmincon('garchlfn22'  , x0 , A  , b, Aeq , beq ,lowerBounds ,upperBounds ,'confun22',[] ,y , R ,0, M ,0, P,0 , Q ,0, X);
[LLF , G , H , e , hh] = garchlfnGM(coefficients , y , pp , R , M , P, Q , X);


